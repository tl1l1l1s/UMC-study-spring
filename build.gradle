plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'umc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Jackson
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.0'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.14.0'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MySQL Connector
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Hibernate
	implementation 'org.hibernate:hibernate-core:6.3.1.Final'

	// SpringDoc OpenAPI
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.9'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', 'src/main/resources']
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL
def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets.main.java.srcDirs += generated

clean {
	delete file(generated)
}